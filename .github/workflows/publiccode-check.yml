name: PublicCode Check and Update

on:
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Check Repository Name
        run: |
          if [[ "${{ github.repository }}" == *".github"* ]]; then
            echo "This workflow cannot be run within .github repositories."
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch Repository Details
        run: |
          REPO_DETAILS=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }})        

      - name: Print GitHub Object
        run: |
          echo "GitHub Object:"
          echo $REPO_DETAILS | jq

      - name: Check and Update publiccode.yaml
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          REPO_DESC="${{ github.event.repository.description }}"
          REPO_URL="${{ github.event.repository.html_url }}"
          REPO_HOMEPAGE="${{ github.event.repository.homepage  }}"
          REPO_TOPICS=${{ github.event.repository.topics }}"
          REPO_LICENSE=$(echo $REPO_DETAILS | jq -r '.license.name')
          
          REPO_AVATAR=$(echo $REPO_DETAILS | jq -r '.owner.avatar_url')
          REPO_EMAIL=$(echo $REPO_DETAILS | jq -r '.owner.email')
          
          ORGANISATION_NAME="${{ github.event.repository.owner.login }}"     
          ORGANISATION_AVATAR=$(echo $REPO_DETAILS | jq -r '.owner.avatar_url')  
          ORGANISATION_EMAIL=$(echo $REPO_DETAILS | jq -r '.owner.email') 
          
          if [ ! -f "publiccode.yaml" ]; then
            echo "publiccode.yaml does not exist, creating one."
            touch publiccode.yaml
          fi        
        
          if [ "$REPO_NAME" != "null" ]; then
            echo "name: $REPO_NAME" > publiccode.yaml
          fi
  
          if [ "$REPO_DESC" != "null" ]; then
            echo "description: $REPO_DESC" >> publiccode.yaml
          fi       
          
          if [ "$REPO_URL" != "null" ]; then
            echo "url: $REPO_URL" > publiccode.yaml
          fi
  
          if [ "$REPO_TOPICS" != "null" ]; then
            echo "topics: $REPO_TOPICS" >> publiccode.yaml
          fi
          
          if [ "$REPO_AVATAR" != "null" ]; then
            echo "avatar: $REPO_AVATAR" >> publiccode.yaml
          fi        
        
          if [ "$REPO_EMAIL" != "null" ]; then
            echo "email: $REPO_EMAIL" >> publiccode.yaml
          fi

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add publiccode.yaml
          git commit -m "Update publiccode.yaml with repo name and description" || echo "No changes to commit"
          git push