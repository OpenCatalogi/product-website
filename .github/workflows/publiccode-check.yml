name: PublicCode Check and Update

on:
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Check Repository Name
        run: |
          if [[ "${{ github.repository }}" == *".github"* ]]; then
            echo "This workflow cannot be run within .github repositories."
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch Repository Details
        run: |
          REPO_DETAILS=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }})        

      - name: Print GitHub Object
        run: |
          echo "GitHub Object:"
          echo $REPO_DETAILS | jq

      - name: Check and Update publiccode.yaml
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          REPO_DESC="${{ github.event.repository.description }}"
          REPO_URL="${{ github.event.repository.html_url }}"
          REPO_HOMEPAGE="${{ github.event.repository.homepage  }}"
          REPO_TOPICS=${{ github.event.repository.topics }}"
          REPO_LICENSE=${{ github.event.repository.license.key  }}"
          
          ORGANISATION_NAME="${{ github.event.repository.owner.login }}"     
          ORGANISATION_AVATAR="${{ github.event.repository.owner.avatar_url }}"      
          
          echo "Installing PyYAML..."
          pip install PyYAML

          echo "Updating publiccode.yaml..."
          python - <<END
          import yaml

          # Read existing publiccode.yaml
          try:
              with open("publiccode.yaml", "r") as f:
                  data = yaml.safe_load(f)
          except FileNotFoundError:
              data = {}

          # Update or append values
          if "$REPO_NAME" != "null":
              data['name'] = "$REPO_NAME"
          if "$REPO_DESC" != "null":
              data['description'] = "$REPO_DESC"
          if "$REPO_URL" != "null":
              data['url'] = "$REPO_URL"
          if "$REPO_HOMEPAGE" != "null":
              data['homepage'] = "$REPO_HOMEPAGE"
          if "$REPO_TOPICS" != "null":
              data['topics'] = "$REPO_TOPICS"
          if "$REPO_LICENSE" != "null":
              data['license'] = "$REPO_LICENSE"
          if "$ORGANISATION_NAME" != "null":
              data['organisationName'] = "$ORGANISATION_NAME"
          if "$ORGANISATION_AVATAR" != "null":
              data['organisationAvatar'] = "$ORGANISATION_AVATAR"

          # Write updated publiccode.yaml
          with open("publiccode.yaml", "w") as f:
              yaml.safe_dump(data, f)
          END

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add publiccode.yaml
          git commit -m "Update publiccode.yaml with repo name and description" || echo "No changes to commit"
          git push